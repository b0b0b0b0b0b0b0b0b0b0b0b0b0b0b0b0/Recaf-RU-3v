import com.github.benmanes.gradle.versions.VersionsPlugin

plugins {
    id "com.github.ben-manes.versions" version "0.42.0"
    id 'gov.tak.gradle.plugins.coverage-report-aggregator' version '1.1.0'
}

allprojects {
    group 'me.coley'
    version '3'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: VersionsPlugin

    // https://docs.gradle.org/current/userguide/toolchains.html
    // gradlew -q javaToolchains - see the list of detected toolchains.
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(11)
        }
    }

    test {
        systemProperty 'junit.jupiter.execution.parallel.enabled', true
        systemProperty 'junit.jupiter.execution.parallel.mode.default', 'concurrent'
        testLogging {
            events "passed", "skipped", "failed"
        }
    }

    tasks.withType(Test).configureEach {
        reports.html.required = false
        reports.junitXml.required = false

        jacoco {
            includes = [ 'me/coley/recaf/**']
        }

        finalizedBy jacocoTestReport
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
        options.incremental = true
    }

    repositories {
        mavenCentral()
        mavenLocal()
        google()
        maven { url 'https://files.minecraftforge.net/maven' }
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.quiltmc.org/repository/release/' }
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile).configureEach {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }

    project.ext {
        def asmVersion = '9.6'
        def dexVersion = '2.5.2'
        def dudeVersion = '1.10.2'
        def jadxVersion = '1.4.7'
        def jpVersion = '3.25.5'
        def junitVersion = '5.10.0'
        def lljzipVersion = '2.3.0'
        def ssvmVersion = '1.9.0.3'
        def vineflowerVersion = '1.9.3'
        def procyonVersion = '0.6.0'
        def slf4jVersion = '2.0.9'
        def logbackVersion = '1.4.11'
        aapt = 'com.android.tools.build:aapt2-proto:7.1.2-7984345'
        asm = "org.ow2.asm:asm:$asmVersion"
        asm_analysis = "org.ow2.asm:asm-analysis:$asmVersion"
        asm_commons = "org.ow2.asm:asm-commons:$asmVersion"
        asm_tree = "org.ow2.asm:asm-tree:$asmVersion"
        asm_util = "org.ow2.asm:asm-util:$asmVersion"
        baksmali = "org.smali:baksmali:$dexVersion"
        cafedude = "com.github.Col-E:CAFED00D:$dudeVersion"
        cfr = 'org.benf:cfr:0.152'
        common_io = 'commons-io:commons-io:2.14.0'
        dexlib = "org.smali:dexlib2:$dexVersion"
        diff = 'com.googlecode.java-diff-utils:diffutils:1.3.0'
        directories = 'dev.dirs:directories:26'
        docking = 'com.github.Col-E:tiwulfx-dock:1.2.3'
        fuzzy = 'me.xdrop:fuzzywuzzy:1.4.0'
        gson = 'com.google.code.gson:gson:2.10.1'
        hppc = 'com.carrotsearch:hppc:0.9.1'
        instrument_server = 'software.coley:instrumentation-server:1.3.6'
        jadx = "io.github.skylot:jadx-core:$jadxVersion"
        jadx_input = "io.github.skylot:jadx-java-input:$jadxVersion"
        java_parser = "com.github.javaparser:javaparser-symbol-solver-core:$jpVersion"
        javassist = 'org.javassist:javassist:3.29.2-GA'
        javax_annos = 'javax.annotation:javax.annotation-api:1.3.2'
        jelf = 'net.fornwall:jelf:0.9.0'
        jphantom = 'com.github.Col-E:jphantom:1.4.3'
        junit_api = "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        junit_engine = "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
        junit_params = "org.junit.jupiter:junit-jupiter-params:$junitVersion"
        llzip = "software.coley:lljzip:$lljzipVersion"
        slf4j = "org.slf4j:slf4j-api:$slf4jVersion"
        logback_classic = "ch.qos.logback:logback-classic:$logbackVersion"
        pe = 'com.github.cademtz:JavaPeParser:2.2.3'
        picocli = 'info.picocli:picocli:4.7.4'
        vineflower = "org.vineflower:vineflower:$vineflowerVersion" // quiltflower -> vineflower
        regex = 'net.sourceforge.jregex:jregex:1.2_01'
        richtextfx = 'org.fxmisc.richtext:richtextfx:0.10.9' // fails on 0.11.0 (no toolkit found)
        smali = "org.smali:smali:$dexVersion"
        ssvm = "com.github.xxdark:ssvm:$ssvmVersion"
        procyon_core = "org.bitbucket.mstrobel:procyon-core:$procyonVersion"
        procyon_compiler_tools = "org.bitbucket.mstrobel:procyon-compilertools:$procyonVersion"
        string_escape_utils = "org.apache.commons:commons-text:1.10.0"

    }
}

jacocoAggregation {
    // Ensure HTML report is always generated
    outputHtml = true
}